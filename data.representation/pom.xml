<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.universAAL.middleware</groupId>
		<artifactId>mw.pom</artifactId>
		<version>1.0.1</version>
	</parent>
	<packaging>bundle</packaging>
	<artifactId>mw.data.representation</artifactId>
	<version>0.3.2-SNAPSHOT</version>
	<name>universAAL Data Representation Model</name>
	<description>Using RDF/OWL model for data representation in universAAL</description>
	<url />

	<dependencies>
		<!--
			The dependency to itests has always come before the dependency to
			org.osgi.core (groupId:org.apache.felix). The easiest approach is to
			just put the dependency to itests as the first one.
		-->
		<dependency>
			<groupId>org.universAAL.support</groupId>
			<artifactId>itests</artifactId>
			<version>0.1.1-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.osgi.core</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.osgi.compendium</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.universAAL.middleware</groupId>
			<artifactId>mw.container.xfaces</artifactId>
			<version>0.1.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.universAAL.middleware</groupId>
			<artifactId>mw.container.osgi</artifactId>
			<version>0.1.0-SNAPSHOT</version>
		</dependency>
	</dependencies>


	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.4</source>
					<target>1.4</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.0.0</version>
				<extensions>true</extensions>
				<executions>
					<execution>
						<id>bundle-manifest</id>
						<phase>process-classes</phase>
						<goals>
							<goal>manifest</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<instructions>
						<Bundle-Name>${project.name}</Bundle-Name>
						<Bundle-Activator>org.universAAL.middleware.datarep.osgi.Activator</Bundle-Activator>
						<Bundle-Description>${project.description}</Bundle-Description>
						<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
						<Export-Package>
							org.universAAL.middleware.rdf,
							org.universAAL.middleware.owl,
							org.universAAL.middleware.owl.supply,
							org.universAAL.middleware.util,
							org.universAAL.middleware.rdf.impl
						</Export-Package>
						<Private-Package>org.universAAL.middleware.datarep,org.universAAL.middleware.datarep.osgi</Private-Package>
					</instructions>
				</configuration>
			</plugin>
			<plugin>
				<!--
					Plugin for *installing* and *deploying* composite of the current
					version
				-->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<!-- Plugin for *installing* composite of 0.3.1-SNAPSHOT -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<executions>
					<execution>
						<id>artifact-composite-0.3.1-install</id>
						<phase>install</phase>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<file>${basedir}/artifact-0.3.1.composite</file>
							<groupId>${groupId}</groupId>
							<artifactId>${artifactId}</artifactId>
							<version>0.3.1-SNAPSHOT</version>
							<packaging>composite</packaging>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>composite-0.3.1-deploy</id>
			<build>
				<plugins>
					<plugin>
						<!-- Deploying of the current version is skipped in this profile -->
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.7</version>
						<configuration>
							<skipAttach>true</skipAttach>
						</configuration>
					</plugin>
					<plugin>
						<!--
							Plugin for *deploying* composite of 0.3.1-SNAPSHOT It is turned
							off by default. If there a need for *deploying* it the following
							command has to be invoked: "mvn deploy -Pcomposite-0.3.1-deploy"
						-->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-deploy-plugin</artifactId>
						<version>2.7</version>
						<configuration>
							<!-- Deployment of the current version is skipped -->
							<skip>true</skip>
						</configuration>
						<executions>
							<execution>
								<id>composite-0.3.1-deploy</id>
								<phase>deploy</phase>
								<goals>
									<goal>deploy-file</goal>
								</goals>
								<!--
									Config is complex because composite needs to be deployed
									together with JAR and POM. Otherwise Pax Runner and Integration
									Tests will not be able to download artifact from nexus snapshot
									repository!!
								-->
								<configuration>
									<repositoryId>uaal-snapshots</repositoryId>
									<url>http://depot.universaal.org/maven-repo/snapshots/</url>
									<file>${basedir}/composite-0.3.1/mw.data.representation-0.3.1-SNAPSHOT.jar</file>
									<pomFile>${basedir}/composite-0.3.1/mw.data.representation-0.3.1-SNAPSHOT.pom</pomFile>
									<groupId>${groupId}</groupId>
									<artifactId>${artifactId}</artifactId>
									<version>0.3.1-SNAPSHOT</version>
									<packaging>jar</packaging>
									<!--
										The second file and type are just dummies because when having
										only one classifer empty classifier was not accepted.
									-->
									<files>${basedir}/artifact-0.3.1.composite,${basedir}/artifact-0.3.1.composite</files>
									<types>composite,composite_copy</types>
									<classifiers>,</classifiers>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
